# Build this dockerfile with `docker build -f rocr-make-release-dockerfile -t roc/rocr .`

# To reduce container rebuild time, place commands least likely to change at top to
# most changing at bottom

# This builds the radeon open compute runtime

# ubuntu:14.04.3, the native kernel is '3.19'
FROM ${roct_name}
MAINTAINER Kent Knox <kent.knox@amd>

# Global environment variables
ENV WORKPATH /root

# Set working directory to be root's home directory
WORKDIR ${WORKPATH}

# Default to a login shell
ENTRYPOINT ["/bin/bash"]
CMD ["-l"]

# Initialize the image we are working with
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
  build-essential \
  libc6-dev-i386 \
  libelf-dev \
  git \
  cmake && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*

# App specific environment variables
ENV ROCR_INSTALL_PATH=${rocr_volume} ROCR_BUILD_PATH=/usr/local/src/ROCR-Runtime/

# Configure, build and install the runtime
# HSAIL based tools need the finalizer libraries, provided in the included deb file
# Extract only the finalizer libraries and build open source libhsa-runtime64 component on top
RUN mkdir -p ${ROCR_BUILD_PATH} && \
  cd ${ROCR_BUILD_PATH} && \
  git clone --depth=1 --branch=${repo_branch} https://github.com/RadeonOpenCompute/ROCR-Runtime.git ./ && \
  dpkg --fsys-tarfile packages/ubuntu/*.deb | tar -xf - -C / --wildcards *.so* --exclude=libhsa-runtime64* && \
  mkdir -p build && \
  cd build && \
    HSATHK_BUILD_INC_PATH=${HSATHK_INSTALL_PATH}/include \
    HSATHK_BUILD_LIB_PATH=${HSATHK_INSTALL_PATH}/lib/x86_64-linux-gnu \
    cmake \
      -DCMAKE_INSTALL_PREFIX=${ROCR_INSTALL_PATH} \
      -DCMAKE_BUILD_TYPE=${build_config} \
    ../src && \
  make -j $(nproc) install && \
  cp -r ../src/inc ${ROCR_INSTALL_PATH}/include && \
  ${rocr_cleanup} \
  echo "${ROCR_INSTALL_PATH}lib" >> /etc/ld.so.conf.d/rocr.conf && \
  ldconfig

COPY setenv-rocr.sh ${ROCR_INSTALL_PATH}
