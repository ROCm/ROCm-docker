# Build this dockerfile with `docker build -f hcc-release-dockerfile -t roc/hcc .`

# To reduce container rebuild time, place commands least likely to change at top to
# most changing at bottom

# This builds the hcc compiler, and depends on an already existing rocr-runtime to be found

# ubuntu:14.04.3, the native kernel is '3.19'
FROM ~~rocr_container~~
MAINTAINER Kent Knox <kent.knox@amd>

# Global environment variables
ENV WORKPATH /root

# Set working directory to be root's home directory
WORKDIR ${WORKPATH}

# Default to a login shell
ENTRYPOINT ["/bin/bash"]
CMD ["-l"]

# Install dependencies required to build hcc
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
  build-essential \
  python \
  libstdc++-4.8-dev \
  libdwarf-dev \
  libelf-dev \
  libtinfo-dev \
  libc6-dev-i386 \
  gcc-multilib \
  llvm \
  llvm-dev \
  llvm-runtime \
  libc++1 \
  libc++-dev \
  libc++abi-dev \
  re2c \
  libncurses5-dev \
  cmake \
  git \
  wget \
  subversion && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*

# App specific environment variables
ENV HCC_INSTALL_PATH=/opt/hcc HCC_BUILD_PATH=/usr/local/src/hcc-hsail
ENV PATH ${PATH}:${HCC_INSTALL_PATH}/bin

# Build hcc, install to /usr/local
RUN mkdir -p ${HCC_BUILD_PATH} && \
  cd ${HCC_BUILD_PATH} && \
  git clone --depth=1 --branch=~~branch~~ https://github.com/RadeonOpenCompute/hcc.git ./ && \
  mkdir -p build && \
  cd build && \
  cmake \
    -DCMAKE_INSTALL_PREFIX=${HCC_INSTALL_PATH} \
    -DCMAKE_BUILD_TYPE=~~config~~ \
    -DHSA_HEADER_DIR=${ROCR_INSTALL_PATH}/include \
    -DHSA_LIBRARY_DIR=${ROCR_INSTALL_PATH}/lib \
    -DHSA_KMT_LIBRARY_DIR=${HSATHK_INSTALL_PATH} \
    .. && \
  make -j $(nproc) world && \
  make install && \
  cd ~ && rm -rf ${HCC_BUILD_PATH} && \
  echo "${HCC_INSTALL_PATH}/lib" >> /etc/ld.so.conf.d/hcc.conf && \
  ldconfig

COPY setenv-hcc.sh ${HCC_INSTALL_PATH}

# VOLUME ${HCC_INSTALL_PATH} ${ROCR_INSTALL_PATH}
